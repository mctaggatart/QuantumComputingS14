%!PS-Adobe-2.0 EPSF-2.0
%%Title: Grp_2.5_levels.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Oct 30 13:32:58 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1656 720 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 1e-16) Rshow
grestore
1.000 UL
LTb
1656 945 M
31 0 V
5105 0 R
-31 0 V
1656 1170 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 1e-14) Rshow
grestore
1.000 UL
LTb
1656 1395 M
31 0 V
5105 0 R
-31 0 V
1656 1620 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 1e-12) Rshow
grestore
1.000 UL
LTb
1656 1845 M
31 0 V
5105 0 R
-31 0 V
1656 2070 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 1e-10) Rshow
grestore
1.000 UL
LTb
1656 2295 M
31 0 V
5105 0 R
-31 0 V
1656 2520 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 1e-08) Rshow
grestore
1.000 UL
LTb
1656 2745 M
31 0 V
5105 0 R
-31 0 V
1656 2970 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 1e-06) Rshow
grestore
1.000 UL
LTb
1656 3195 M
31 0 V
5105 0 R
-31 0 V
1656 3420 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 0.0001) Rshow
grestore
1.000 UL
LTb
1656 3645 M
31 0 V
5105 0 R
-31 0 V
1656 3870 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 0.01) Rshow
grestore
1.000 UL
LTb
1656 4095 M
31 0 V
5105 0 R
-31 0 V
1656 4320 M
63 0 V
5073 0 R
-63 0 V
-5217 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1656 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
2390 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
3123 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 6) Cshow
grestore
1.000 UL
LTb
3857 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
4591 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
5325 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 12) Cshow
grestore
1.000 UL
LTb
6058 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 14) Cshow
grestore
1.000 UL
LTb
6792 720 M
0 63 V
0 3537 R
0 -63 V
0 -3777 R
gsave 0 setgray
( 16) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1656 720 M
5136 0 V
0 3600 V
-5136 0 V
0 -3600 V
LTb
240 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Error) Cshow
grestore
grestore
LTb
4224 120 M
gsave 0 setgray
(Gate Time \(ns\)) Cshow
grestore
LTb
4224 4680 M
gsave 0 setgray
(Leakage error with anharm. Delta=-2.5) Cshow
grestore
1.000 UP
1.000 UL
LT0
LTb
5721 4137 M
gsave 0 setgray
(Grape 1 leakage above) Rshow
grestore
LT0
5865 4137 M
639 0 V
1656 4121 M
367 -732 V
2390 1423 L
367 -245 V
366 18 V
367 -80 V
367 57 V
367 -17 V
367 23 V
367 25 V
367 -3 V
366 -25 V
367 74 V
367 -82 V
367 -77 V
1.000 UL
LT1
LTb
5721 3897 M
gsave 0 setgray
(Grape 2 leakages above) Rshow
grestore
LT1
5865 3897 M
639 0 V
1656 4132 M
367 -337 V
367 -324 V
367 -160 V
366 -58 V
367 -100 V
367 -100 V
367 -167 V
367 -516 V
367 72 V
367 -285 V
366 -388 V
367 465 V
367 19 V
367 -117 V
1.000 UL
LT2
LTb
5721 3657 M
gsave 0 setgray
(Grape 3 leakages above) Rshow
grestore
LT2
5865 3657 M
639 0 V
1656 4134 M
367 -331 V
367 -318 V
367 -174 V
366 -60 V
367 -93 V
367 -94 V
367 -140 V
367 -504 V
367 -73 V
367 -15 V
366 -265 V
367 154 V
367 25 V
367 -89 V
1.000 UL
LT3
LTb
5721 3417 M
gsave 0 setgray
(Drag 1 leakage above) Rshow
grestore
LT3
5865 3417 M
639 0 V
1656 4027 M
367 -189 V
367 -192 V
367 -213 V
366 -218 V
367 -91 V
367 -79 V
367 -78 V
367 -50 V
367 -71 V
367 -42 V
366 -50 V
367 -49 V
367 -29 V
367 -51 V
1.000 UL
LT4
LTb
5721 3177 M
gsave 0 setgray
(Drag 2 leakages above) Rshow
grestore
LT4
5865 3177 M
639 0 V
1656 4090 M
367 -156 V
367 -173 V
367 -213 V
366 -306 V
367 -370 V
367 4 V
367 -180 V
367 60 V
367 -239 V
367 76 V
366 -61 V
367 -186 V
367 140 V
367 -283 V
1.000 UL
LT5
LTb
5721 2937 M
gsave 0 setgray
(Drag 3 leakages above) Rshow
grestore
LT5
5865 2937 M
639 0 V
1656 4093 M
367 -157 V
367 -173 V
367 -213 V
366 -305 V
367 -374 V
367 5 V
367 -179 V
367 59 V
367 -239 V
367 76 V
366 -61 V
367 -186 V
367 140 V
367 -283 V
1.000 UL
LT6
LTb
5721 2697 M
gsave 0 setgray
(Gauss 1 leakage above) Rshow
grestore
LT6
5865 2697 M
639 0 V
1656 4232 M
367 -98 V
367 -99 V
367 -46 V
366 -35 V
367 -36 V
367 -27 V
367 -24 V
367 -21 V
367 -19 V
367 -18 V
366 -15 V
367 -15 V
367 -14 V
367 -13 V
1.000 UL
LT7
LTb
5721 2457 M
gsave 0 setgray
(Gauss 2 leakages above) Rshow
grestore
LT7
5865 2457 M
639 0 V
1656 4265 M
367 -96 V
367 -116 V
367 -63 V
366 -33 V
367 -36 V
367 -27 V
367 -25 V
367 -22 V
367 -19 V
367 -17 V
366 -16 V
367 -15 V
367 -14 V
367 -13 V
1.000 UL
LTb
1656 720 M
5136 0 V
0 3600 V
-5136 0 V
0 -3600 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
